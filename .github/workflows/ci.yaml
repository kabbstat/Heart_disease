name: CI
on:
  push:
    branches: [master]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
     - name: checkout code
       uses: actions/checkout@v3
     - name: Set up python
       uses: actions/setup-python@v3
       with:
          python-version: '3.8'
     - name: cache pip independencies
       uses: actions/cache@v3
       with:
         path: ~/.cache/pip
         key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
         restore-keys: |
            ${{runner.os}}-pip-
     - name: Cache DVC
       uses: actions/cache@v3
       with:
         path: .dvc/cache
         key: ${{runner.os}}-dvc-${{hashfiles('**/.dvc/config')}}
         restore-keys: |
            ${{runner.os}}-dvc-
     - name: Install dependencies
       run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install "dvc[all]" mlflow
#     - name: Pull data artifacts with DVC
#       run: |
#            dvc pull --quiet

     - name: Start MLflow server
       run: | 
              # Démarrer MLflow en arrière-plan
              mlflow server --backend-store-uri file://$PWD/mlruns \
                 --default-artifact-root file://$PWD/mlruns \
                 --host 0.0.0.0 --port 5000 &
              
              # Attendre que le serveur soit prêt
              echo "Attente du démarrage du serveur MLflow..."
              for i in {1..5}; do
                if curl -s http://localhost:5000/health > /dev/null 2>&1; then
                  echo "Serveur MLflow prêt!"
                  break
                fi
                echo "Tentative $i/5..."
                sleep 2
              done
              
              # Vérifier si le serveur est vraiment prêt
              if ! curl -s http://localhost:5000/health > /dev/null 2>&1; then
                echo "Erreur: Le serveur MLflow n'a pas démarré correctement"
                exit 1
              fi
     - name: Reproduce DVC pipeline
       run : |
          export MLFLOW_TRACKING_URI=http://localhost:5000
           python -c "import mlflow; mlflow.set_tracking_uri('http://localhost:5000'); print('MLflow connecté avec succès')"
          dvc repro --quiet
     - name: Upload model output
       uses: actions/upload-artifact@v4
       with:
         name: ml-model-outputs
         path : |
            best_model_params.json
            best_model.txt
       